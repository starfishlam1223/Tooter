{"version":3,"sources":["toots/components.js","toots/lookup.js","lookup/components.js","toots/buttons.js","toots/list.js","toots/detail.js","toots/create.js","serviceWorker.js","index.js"],"names":["TootDetailComponent","props","tootId","useState","didLookup","setDidLookup","toot","setToot","backendLookupHandler","response","status","alert","useEffect","callback","backendLookup","Toot","isDetail","className","method","endpoint","data","jsondata","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","detail","console","log","window","location","href","onerror","e","message","send","ActionBtn","action","didPerformAction","likeCount","actionDisplay","display","type","apiTootActionCallback","onClick","event","preventDefault","id","apiTootAction","TootList","tootsInit","setTootsInit","toots","setToots","tootsDidSet","setTootsDidSet","final","newToots","concat","username","apiTootList","didRetootHandler","retoot","updatedtootsInit","unshift","updatedtootsFinal","map","index","didRetoot","key","ParentToot","parent","hideAction","actionToot","setActionToot","reTootTrigger","setreTootTrigger","performActionhandler","newActionToot","content","Fragment","TootCreate","textAreaRef","React","createRef","didToot","createTootCallback","onSubmit","tootContent","current","value","ref","required","placeholder","Boolean","hostname","match","createElement","tootElem","getElementById","ReactDOM","render","canToot","setNewToots","newToot","tempNewToots","dataset","querySelectorAll","forEach","container","path","pathname","idRegex","matches","groups","setAttribute","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"4MAwCO,SAASA,EAAoBC,GAAQ,IACjCC,EAAUD,EAAVC,OADgC,EAELC,oBAAS,GAFJ,mBAEhCC,EAFgC,KAErBC,EAFqB,OAGfF,mBAAS,MAHM,mBAGhCG,EAHgC,KAG1BC,EAH0B,KAKjCC,EAAuB,SAACC,EAAUC,GACrB,MAAXA,EACAH,EAAQE,GAERE,MAAM,0CAUd,OAPAC,qBAAU,WClCP,IAA2BC,GDmCR,IAAdT,ICnCsBS,EDoCAL,ECnC9BM,EAAc,MAAD,gBDmCSZ,ECnCT,KAAwBW,GDoC7BR,GAAa,MAElB,CAACH,EAAQE,EAAWC,IAEP,OAATC,EAAgB,kBAACS,EAAD,CAAMC,UAAQ,EAACV,KAAMA,EAAMW,UAAWhB,EAAMgB,YAAgB,KE3ChF,SAASH,EAAcI,EAAQC,EAAUN,EAAUO,GACtD,IAAIC,EACAD,IACAC,EAAWC,KAAKC,UAAUH,IAG9B,IAAMI,EAAM,IAAIC,eACVC,EAAG,oCAAgCP,GAEnCQ,EAzBV,SAAmBC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,EAYWU,CAAU,aAE5Bf,EAAIgB,aAHiB,OAIrBhB,EAAIiB,KAAKvB,EAAQQ,GACjBF,EAAIkB,iBAAiB,eAAgB,oBACjCf,IACAH,EAAIkB,iBAAiB,wBAAyB,kBAC9ClB,EAAIkB,iBAAiB,mBAAoB,kBACzClB,EAAIkB,iBAAiB,cAAef,IAExCH,EAAImB,OAAS,WACT,GAAmB,MAAfnB,EAAId,OAAgB,CACpB,IAAMkC,EAASpB,EAAIf,SAASmC,OAC5BC,QAAQC,IAAItB,EAAIf,SAASmC,QACV,kDAAXA,IACAG,OAAOC,SAASC,KAAO,iCAG/BpC,EAASW,EAAIf,SAAUe,EAAId,SAE/Bc,EAAI0B,QAAU,SAAUC,GACpBN,QAAQC,IAAIK,GACZtC,EAAS,CAAEuC,QAAS,4BAA8B,MAEtD5B,EAAI6B,KAAKhC,GC9CN,SAASiC,EAAUrD,GAAQ,IACtBK,EAAmCL,EAAnCK,KAAMiD,EAA6BtD,EAA7BsD,OAAQC,EAAqBvD,EAArBuD,iBAChBC,EAAYnD,EAAKmD,UAAYnD,EAAKmD,UAAY,EAC9CxC,EAAYhB,EAAMgB,UAAYhB,EAAMgB,UAAY,yBAChDyC,EAAgBH,EAAOI,QAAUJ,EAAOI,QAAU,SAClDA,EAA0B,SAAhBJ,EAAOK,KAAP,UAA4BH,EAA5B,YAAyCC,GAAkBA,EAErEG,EAAwB,SAACpD,EAAUC,GACrB,MAAXA,GAA6B,MAAXA,IAAmB8C,GACtCA,EAAiB/C,EAAUC,IAenC,OAAO,4BAAQO,UAAWA,EAAW6C,QALjB,SAACC,GACjBA,EAAMC,iBFTP,SAAuBC,EAAIV,EAAQ1C,GACtCC,EAAc,OAAQ,gBAAiBD,EAAU,CAAEoD,GAAIA,EAAIV,OAAQA,IES/DW,CAAc5D,EAAK2D,GAAIV,EAAOK,KAAMC,KAInCF,GCzBF,SAASQ,EAASlE,GAAQ,IAAD,EACME,mBAAS,IADf,mBACrBiE,EADqB,KACVC,EADU,OAEFlE,mBAAS,IAFP,mBAErBmE,EAFqB,KAEdC,EAFc,OAGUpE,oBAAS,GAHnB,mBAGrBqE,EAHqB,KAGRC,EAHQ,KAK5B7D,qBAAU,WACN,IAAM8D,EAAQ,YAAIzE,EAAM0E,UAAUC,OAAOR,GACrCM,EAAMvC,SAAWmC,EAAMnC,QACvBoC,EAASG,KAEd,CAACzE,EAAM0E,SAAUP,EAAWE,IAE/B1D,qBAAU,WACN,IAAoB,IAAhB4D,EAAuB,EHV5B,SAAqBK,EAAUhE,GAClC,IAAIM,EAAW,SACX0D,IACA1D,EAAQ,0BAAsB0D,IAElC/D,EAAc,MAAOK,EAAUN,GGcvBiE,CAAY7E,EAAM4E,UARU,SAACpE,EAAUC,GACpB,MAAXA,GACA2D,EAAa5D,GACbgE,GAAe,IAEf9D,MAAMF,EAAS2C,eAK5B,CAACgB,EAAWI,EAAaC,EAAgBxE,EAAM4E,WAElD,IAAME,EAAmB,SAACC,GACtB,IAAMC,EAAgB,YAAOb,GAC7Ba,EAAiBC,QAAQF,GACzBX,EAAaY,GACbpC,QAAQC,IAAImC,GAEZ,IAAME,EAAiB,YAAOb,GAC9Ba,EAAkBD,QAAQZ,GAC1BC,EAASY,GACTtC,QAAQC,IAAIqC,IAIhB,OAAOb,EAAMc,KAAI,SAAC9E,EAAM+E,GACpB,OAAO,kBAACtE,EAAD,CAAMT,KAAMA,EAAMgF,UAAWP,EAAkB9D,UAAU,6DAA6DsE,IAAKF,OCxCnI,SAASG,EAAWvF,GAAQ,IACvBK,EAASL,EAATK,KAER,OAAOA,EAAKmF,OAAS,yBAAKxE,UAAU,OAChC,uBAAGA,UAAU,4CAAb,UACA,kBAACF,EAAD,CAAM2E,YAAU,EAACzE,UAAU,oCAAoCX,KAAMA,EAAKmF,UACrE,KAGN,SAAS1E,EAAKd,GAAQ,IACjBK,EAA0CL,EAA1CK,KAAMgF,EAAoCrF,EAApCqF,UAAWI,EAAyBzF,EAAzByF,WAAY1E,EAAaf,EAAbe,SADb,EAEYb,mBAASF,EAAMK,KAAOL,EAAMK,KAAO,MAF/C,mBAEjBqF,EAFiB,KAELC,EAFK,KAGlB3E,EAAYhB,EAAMgB,UAAYhB,EAAMgB,UAAY,0BAH9B,EAIgBd,oBAAS,GAJzB,mBAInB0F,EAJmB,KAIJC,EAJI,KAMlBC,EAAuB,SAACC,EAAetF,GAC1B,MAAXA,EACAkF,EAAcI,GAEVV,IACAA,EAAUU,GACVF,GAAkBD,KAc9B,OAJAjF,qBAAU,WACNgF,EAAc3F,EAAMK,QACrB,CAACL,EAAMK,KAAMuF,IAET,yBAAK5E,UAAWA,GACnB,6BACI,uBAAGA,UAAU,SAASX,EAAK2D,IAC3B,2BAAI3D,EAAK2F,SACT,kBAACT,EAAD,CAAYlF,KAAMA,KAEtB,yBAAKW,UAAU,iBACT0E,IAA6B,IAAfD,GAAwB,kBAAC,IAAMQ,SAAP,KACpC,kBAAC5C,EAAD,CAAWhD,KAAMqF,EAAYnC,iBAAkBuC,EAAsBxC,OAAQ,CAAEK,KAAM,OAAQD,QAAS,WACtG,kBAACL,EAAD,CAAWhD,KAAMqF,EAAYnC,iBAAkBuC,EAAsBxC,OAAQ,CAAEK,KAAM,SAAUD,QAAS,YACxG,kBAACL,EAAD,CAAWhD,KAAMqF,EAAYnC,iBAAkBuC,EAAsBxC,OAAQ,CAAEK,KAAM,SAAUD,QAAS,aAG3G3C,EAAW,KAAO,4BAAQC,UAAU,iCAAiC6C,QAtB3D,SAACC,GAChBA,EAAMC,iBACNjB,OAAOC,SAASC,KAAhB,WAA2B3C,EAAK2D,MAoBT,eChDxB,SAASkC,EAAWlG,GACvB,IAAMmG,EAAcC,IAAMC,YAClBC,EAAYtG,EAAZsG,QACFC,EAAqB,SAAC/F,EAAUC,GACnB,MAAXA,EACA6F,EAAQ9F,GAERE,MAAM,gCAWd,OAAO,yBAAKM,UAAWhB,EAAMgB,WACzB,0BAAMA,UAAU,OAAOgD,GAAG,mBAAmBwC,SAR3B,SAAC1C,GACnBA,EAAMC,iBACN,IAAM0C,EAAcN,EAAYO,QAAQC,MLb5C9F,EAAc,OAAQ,gBKcS0F,ELdkB,CAAEP,QKcjCS,IACdN,EAAYO,QAAQC,MAAQ,KAKxB,8BAAUC,IAAKT,EAAaU,UAAQ,EAAC7F,UAAU,eAAeW,KAAK,UAAUmF,YAAY,6BACzF,4BAAQnD,KAAK,SAAS3C,UAAU,wBAAhC,UCZQ+F,QACW,cAA7BjE,OAAOC,SAASiE,UAEe,UAA7BlE,OAAOC,SAASiE,UAEhBlE,OAAOC,SAASiE,SAASC,MACvB,2DCXN,IAAM/D,EAAIkD,IAAMc,cAEVC,EAAWtF,SAASuF,eAAe,UAErCD,GACFE,IAASC,OAAOpE,GRRX,SAAwBlD,GAC3B,IAAMuH,EAA4B,SAAlBvH,EAAMuH,QADY,EAEFrH,mBAAS,IAFP,mBAE3BwE,EAF2B,KAEjB8C,EAFiB,KAQlC,OAAO,yBAAKxG,UAAWhB,EAAMgB,WACxBuG,GAAW,kBAACrB,EAAD,CAAYlF,UAAU,cAAcsF,QANpC,SAACmB,GACb,IAAIC,EAAY,YAAOhD,GACvBgD,EAAazC,QAAQwC,GACrBD,EAAYE,MAIZ,kBAACxD,EAAD,iBAAclE,EAAd,CAAqB0E,SAAUA,QQFHyC,EAASQ,SAAUR,GAGhCtF,SAAS+F,iBAAiB,kBAElCC,SAAQ,SAACC,GACtB,GAAIA,EAAW,CACb,IAAIC,EAAOjF,OAAOC,SAASiF,SACvBC,EAAO,YAAG,WAAH,YACPC,EAAUH,EAAKd,MAAMgB,GAEzB,GAAIC,EAAS,CACX,IAAIjI,EAASiI,EAAQC,OAAOlI,OAC5B6H,EAAUM,aAAa,eAAgBnI,GACvCoH,IAASC,OAAOpE,EAAEnD,EAAqB+H,EAAUH,SAAUG,QDyG3D,kBAAmBO,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhG,QAAQgG,MAAMA,EAAMzF,a","file":"static/js/main.0c87a84f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Toot, TootList, TootCreate } from '.'\r\nimport { apiTootDetail } from '.'\r\n\r\nexport function TootsComponent(props) {\r\n    const canToot = props.canToot === \"true\"\r\n    const [newToots, setNewToots] = useState([])\r\n    const didToot = (newToot) => {\r\n        let tempNewToots = [...newToots]\r\n        tempNewToots.unshift(newToot)\r\n        setNewToots(tempNewToots)\r\n    }\r\n    return <div className={props.className}>\r\n        {canToot && <TootCreate className=\"col-12 mb-3\" didToot={didToot} />}\r\n        <TootList {...props} newToots={newToots} />\r\n    </div>\r\n}\r\n\r\n// export function TootForm(props) {\r\n//     const textAreaRef = React.createRef()\r\n//     const [newToots, setNewToots] = useState()\r\n//     const submitHandler = function (event) {\r\n//         event.preventDefault()\r\n//         let tempNewToots = [...newToots]\r\n//         tempNewToots.unshift({\r\n//             content: textAreaRef.current.value,\r\n//             likecount: 0,\r\n//             id: -1\r\n//         })\r\n//         setNewToots(tempNewToots)\r\n//         textAreaRef.current.value = \"\"\r\n//     }\r\n\r\n//     return <div className=\"col-12 mb-3\">\r\n//         <form className=\"form\" id=\"toot-create-form\" onSubmit={submitHandler}>\r\n//             <textarea required class=\"form-control\" name=\"content\" placeholder=\"What is your toot today?\"></textarea>\r\n//             <button type=\"submit\" class=\"btn btn-primary my-3\">Toot</button>\r\n//         </form>\r\n//     </div>\r\n// }\r\nexport function TootDetailComponent(props) {\r\n    const {tootId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [toot, setToot] = useState(null)\r\n\r\n    const backendLookupHandler = (response, status) => {\r\n        if (status === 200) {\r\n            setToot(response)\r\n        } else {\r\n            alert(\"There was an error finding your toot!\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTootDetail(tootId, backendLookupHandler)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tootId, didLookup, setDidLookup])\r\n\r\n    return toot !== null ? <Toot isDetail toot={toot} className={props.className} /> : null\r\n}","import { backendLookup } from \"../lookup\"\r\n\r\nexport function apiTootCreate(newToot, callback) {\r\n    backendLookup(\"POST\", \"toots/create/\", callback, { content: newToot })\r\n}\r\n\r\nexport function apiTootList(username, callback) {\r\n    let endpoint = \"toots/\"\r\n    if (username) {\r\n        endpoint = `toots/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTootAction(id, action, callback) {\r\n    backendLookup(\"POST\", \"toots/action/\", callback, { id: id, action: action })\r\n}\r\n\r\nexport function apiTootDetail(id, callback) {\r\n    backendLookup(\"GET\", `toots/${id}/`, callback)\r\n}\r\n","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsondata;\r\n    if (data) {\r\n        jsondata = JSON.stringify(data)\r\n    }\r\n\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api/${endpoint}`\r\n    const responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    if (csrftoken) {\r\n        xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")    \r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403) {\r\n            const detail = xhr.response.detail\r\n            console.log(xhr.response.detail)\r\n            if (detail === \"Authentication credentials were not provided.\") {\r\n                window.location.href = \"/login?showLoginRequired=true\"\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        console.log(e)\r\n        callback({ message: \"The request was an error\" }, 400)\r\n    }\r\n    xhr.send(jsondata)\r\n}\r\n","import React from 'react'\r\nimport { apiTootAction } from '.'\r\n\r\nexport function ActionBtn(props) {\r\n    const { toot, action, didPerformAction } = props\r\n    const likeCount = toot.likeCount ? toot.likeCount : 0\r\n    const className = props.className ? props.className : \"btn btn-primary btn-sm\"\r\n    const actionDisplay = action.display ? action.display : \"Action\"\r\n    const display = action.type === \"like\" ? `${likeCount} ${actionDisplay}` : actionDisplay\r\n\r\n    const apiTootActionCallback = (response, status) => {\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status)\r\n        }\r\n        // if (action.type === \"like\") {\r\n        // } else if (action.type === \"unlike\") {\r\n\r\n        // } else if (action.type === \"retoot\") {\r\n\r\n        // }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTootAction(toot.id, action.type, apiTootActionCallback)\r\n    }\r\n\r\n    return <button className={className} onClick={handleClick}>\r\n        {display}\r\n    </button>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { apiTootList, Toot } from '.'\r\n\r\nexport function TootList(props) {\r\n    const [tootsInit, setTootsInit] = useState([])\r\n    const [toots, setToots] = useState([])\r\n    const [tootsDidSet, setTootsDidSet] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newToots].concat(tootsInit)\r\n        if (final.length !== toots.length) {\r\n            setToots(final)\r\n        }\r\n    }, [props.newToots, tootsInit, toots])\r\n\r\n    useEffect(() => {\r\n        if (tootsDidSet === false) {\r\n            const apiTootListCallback = (response, status) => {\r\n                if (status === 200) {\r\n                    setTootsInit(response)\r\n                    setTootsDidSet(true)\r\n                } else {\r\n                    alert(response.message)\r\n                }\r\n            }\r\n            apiTootList(props.username, apiTootListCallback)\r\n        }\r\n    }, [tootsInit, tootsDidSet, setTootsDidSet, props.username])\r\n\r\n    const didRetootHandler = (retoot) => {\r\n        const updatedtootsInit = [...tootsInit]\r\n        updatedtootsInit.unshift(retoot)\r\n        setTootsInit(updatedtootsInit)\r\n        console.log(updatedtootsInit)\r\n\r\n        const updatedtootsFinal = [...toots]\r\n        updatedtootsFinal.unshift(toots)\r\n        setToots(updatedtootsFinal)\r\n        console.log(updatedtootsFinal)\r\n\r\n    }\r\n\r\n    return toots.map((toot, index) => {\r\n        return <Toot toot={toot} didRetoot={didRetootHandler} className=\"col-10 mx-auto my-5 py-5 border rounded bg-white text-dark\" key={index} />\r\n    })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { ActionBtn } from '.'\r\n\r\nexport function ParentToot(props) {\r\n    const { toot } = props\r\n\r\n    return toot.parent ? <div className=\"row\">\r\n        <p className=\"col-11 p-3 mx-auto mb-0 text-muted small\">Retoot</p>\r\n        <Toot hideAction className=\"col-11 p-3 mx-auto border rounded\" toot={toot.parent} />\r\n    </div> : null\r\n}\r\n\r\nexport function Toot(props) {\r\n    const { toot, didRetoot, hideAction, isDetail } = props\r\n    const [actionToot, setActionToot] = useState(props.toot ? props.toot : null)\r\n    const className = props.className ? props.className : \"col-10 mx-auto col-md-6\"\r\n    var [reTootTrigger, setreTootTrigger] = useState(false)\r\n\r\n    const performActionhandler = (newActionToot, status) => {\r\n        if (status === 200) {\r\n            setActionToot(newActionToot)\r\n        } else {\r\n            if (didRetoot) {\r\n                didRetoot(newActionToot)\r\n                setreTootTrigger(!reTootTrigger)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${toot.id}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        setActionToot(props.toot)\r\n    }, [props.toot, reTootTrigger])\r\n\r\n    return <div className={className}>\r\n        <div>\r\n            <p className=\"small\">{toot.id}</p>\r\n            <p>{toot.content}</p>\r\n            <ParentToot toot={toot} />\r\n        </div>\r\n        <div className=\"btn btn-group\">\r\n            {(actionToot && hideAction !== true) && <React.Fragment>\r\n                <ActionBtn toot={actionToot} didPerformAction={performActionhandler} action={{ type: \"like\", display: \"Likes\" }} />\r\n                <ActionBtn toot={actionToot} didPerformAction={performActionhandler} action={{ type: \"unlike\", display: \"Unlike\" }} />\r\n                <ActionBtn toot={actionToot} didPerformAction={performActionhandler} action={{ type: \"retoot\", display: \"Retoot\" }} />\r\n            </React.Fragment>\r\n            }\r\n            {isDetail ? null : <button className=\"btn btn-outline-primary btn-sm\" onClick={handleLink}>View Toot</button>}\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport { apiTootCreate } from '.'\r\n\r\nexport function TootCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const { didToot } = props\r\n    const createTootCallback = (response, status) => {\r\n        if (status === 201) {\r\n            didToot(response)\r\n        } else {\r\n            alert(\"Your toot cannot be created\")\r\n        }\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        const tootContent = textAreaRef.current.value\r\n        apiTootCreate(tootContent, createTootCallback)\r\n        textAreaRef.current.value = \"\"\r\n    }\r\n\r\n    return <div className={props.className}>\r\n        <form className=\"form\" id=\"toot-create-form\" onSubmit={submitHandler}>\r\n            <textarea ref={textAreaRef} required className=\"form-control\" name=\"content\" placeholder=\"What is your toot today?\"></textarea>\r\n            <button type=\"submit\" className=\"btn btn-primary my-3\">Toot</button>\r\n        </form>\r\n    </div>\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { TootsComponent, TootDetailComponent } from './toots';\nimport * as serviceWorker from './serviceWorker';\n\nconst e = React.createElement\n\nconst tootElem = document.getElementById('tooter')\n\nif (tootElem) {\n  ReactDOM.render(e(TootsComponent, tootElem.dataset), tootElem);\n}\n\nconst tootDetailElem = document.querySelectorAll(\".tooter-detail\")\n\ntootDetailElem.forEach((container) => {\n  if (container) {\n    var path = window.location.pathname\n    var idRegex = /(?<tootId>\\d+)/\n    var matches = path.match(idRegex)\n\n    if (matches) {\n      var tootId = matches.groups.tootId\n      container.setAttribute(\"data-toot-id\", tootId)  \n      ReactDOM.render(e(TootDetailComponent, container.dataset), container);  \n    }\n  }\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}